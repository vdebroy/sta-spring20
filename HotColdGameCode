import java.util.*;
public class HelloWorld{

     public static void main(String []args){
        
        // Assume a square board
        // Assume an odd number
        int boardSize = 7;
        
        // Starting position of player
        // at center cell
        int playerX = boardSize/2;
        int playerY = boardSize/2;
        
        
        // Must not allow goalX and goalY to be the same as playerX and playerY
        int goalX = getRandomNumberWithinMax(boardSize);
        int goalY = getRandomNumberWithinMax(boardSize);
        
        // HW 1
        // Write the code to generate goalX and goalY such that
        // we ensure its not the same as playerX and playerY
        
        // Condition we want to avoid
        // (goalX == playerX && goalY == playerY)
        
        // HW2
        // You know how to take inputs from the User now
        // imagine taking the move from the user:
        // w is up
        // a is left
        // s is down
        // d is right
        
        // How to tell the User we're at the edge?
        
        // HW 4 
        // Decide when the game is over
        
        System.out.println(HotterOrColder(0,0,1,1,2));
        System.out.println(HotterOrColder(0,0,1,1,-5));
        System.out.println(HotterOrColder(0,0,1,1,0));
        System.out.println(getCellFormattedString(goalX,goalY));
        
        
        System.out.println("Player starts out at: " + getCellFormattedString(playerX,playerY));
        
        int[][] twoDimensionalArray = new int [boardSize][boardSize];
        
        for (int i=0; i<twoDimensionalArray.length;i++) {
            for(int j=0;j<twoDimensionalArray[i].length;j++) {
                System.out.print(getCellFormattedString(i,j) + " ");
            }
            System.out.println();
        }
        System.out.println(gameOverOrNot(1,1,1,1));
        System.out.println(gameOverOrNot(1,1,2,2));
        System.out.println(getManhattanDistance(0,0,0,0));
        System.out.println(getManhattanDistance(0,0,1,1));
        System.out.println(getManhattanDistance(0,0,0,3));
        System.out.println(getManhattanDistance(0,0,3,0));
        System.out.println(getManhattanDistance(1,1,3,3));
        while(gameOverOrNot(playerX,playerY,goalx,goaly) != true){
            
            Scanner one = new Scanner(System.in);
            System.out.println("Enter a move");
            
            //String userInput = one.nextLine(); 
            String userInput = "W";
            
            char move = userInput.charAt(0);
            System.out.println(move);
            
            if (move =='w' || move == 'W') {
                if(playerY != 0){
                    playerY++;
                }
            }
            else if (move =='a' || move == 'A') {
                if(playerX != 0){
                    playerX--;
                }
            }
            else if (move =='s' || move == 'S') {
                if(playerY != boardSize - 1){
                    playerY--;
                }
            }
            else if (move =='d' || move == 'D') {
                if(playerX != boardSize - 1){
                    playerX++;
                }
            }else {
                System.out.println("Whoops!");
            }
            System.out.println("Player is now at" + getCellFormattedString(playerX,playerY));
        }
        System.out.println("Good Job, You won!!!"); 
     }
     
     public static int getManhattanDistance(int x1, int y1, int x2, int y2) {
        // Simple and readable code
        int x = Math.abs(x2 - x1);
        int y = Math.abs(y2 - y1);
        return x + y;

        // Just a one-liner
        //return Math.abs(x2 - x1) + Math.abs(y2 - y1);
     }
     
     public static String getCellFormattedString(int x, int y) {
        return "(" + x + "," + y + ")";
     }
     
     public static int getRandomNumberWithinMax(int max) {
         // random gives us a number between 0 and 1
         // multiple it by 10 and then convert that to an int
         // and then we lose the fractional part
         int randomNumber = (int)(Math.random() * 10);
         
         if (randomNumber > max -1) {
             randomNumber = randomNumber - max;
         }
         
         return randomNumber;
     
     }
     public static String HotterOrColder(int futurex, int futurey, int goalx, int goaly,  int currentdistance){
        int futuredistance = getManhattanDistance(futurex,futurey,goalx,goaly);
        if(futuredistance > currentdistance){
            return "Colder";
        }
        else
            return "Hotter";
         
     }
     public static boolean gameOverOrNot(int currentx,int currenty,int goalx,int goaly){
         if(currentx == goalx || currenty == goaly){
             return true;
         }
         else
            return false;
     }
}
